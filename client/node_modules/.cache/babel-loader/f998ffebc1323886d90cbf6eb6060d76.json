{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy\\\\ReactJS\\\\crwn-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = _ref => {\n  let {\n    cartItems,\n    history,\n    dispatch\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length > 0 ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 49\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => {\n        history.push('/checkout');\n        dispatch;\n      },\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["D:/Udemy/ReactJS/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAO,6BAAP;;;AAGA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAD;AAAA,sBACjB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEQF,SAAS,CAACG,MAAV,GAAmB,CAAnB,GAEIH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBAAc,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAA5B,CAFJ,gBAII;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,YAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACXL,QAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,QAAAA,QAAQ;AACX,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAArB;;KAAMH,Y;AAsBN,MAAMS,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACc,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import CustomButton from '../custom-button/custom-button.component'\r\nimport CartItem from '../cart-item/cart-item.component'\r\nimport { connect } from 'react-redux'\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\r\nimport './cart-dropdown.styles.scss'\r\n\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n    <div className=\"cart-dropdown\">\r\n        <div className=\"cart-items\">\r\n            {\r\n                cartItems.length > 0\r\n                    ?\r\n                    cartItems.map((cartItem) => <CartItem key={cartItem.id} item={cartItem} />)\r\n                    :\r\n                    <span className=\"empty-message\">Your cart is empty</span>\r\n            }\r\n        </div>\r\n        <CustomButton\r\n            onClick={() => {\r\n                history.push('/checkout')\r\n                dispatch\r\n            }}\r\n        >\r\n            GO TO CHECKOUT\r\n        </CustomButton>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown))"]},"metadata":{},"sourceType":"module"}