{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //   collectionRef\n  //     .get()\n  //     .then((snapshot) => {\n  //       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch((err) => dispatch(fetchCollectionsFailure(err.message)));\n\n}\nexport function* fetchColletionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/Udemy/ReactJS/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchColletionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACE,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALH,CAKI,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACL,GAVsC,CAYzC;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AACD,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMlB,SAAS,CACbO,eAAe,CAACY,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"fired\");\r\n\r\n  try {\r\n      const collectionRef = firestore.collection(\"collections\");\r\n      const snapshot = yield collectionRef.get()\r\n      const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n  }\r\n\r\n//   collectionRef\r\n//     .get()\r\n//     .then((snapshot) => {\r\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//       dispatch(fetchCollectionsSuccess(collectionsMap));\r\n//     })\r\n//     .catch((err) => dispatch(fetchCollectionsFailure(err.message)));\r\n}\r\nexport function* fetchColletionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}